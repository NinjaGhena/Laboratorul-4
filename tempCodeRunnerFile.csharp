using System;
using System.Collections.Generic;

// ---------------------------
// Clasa abstractă EntitateEcosistem
// ---------------------------
abstract class EntitateEcosistem
{
    public string Nume { get; set; }
    public int Energie { get; set; }
    public int PozitieX { get; set; }
    public int PozitieY { get; set; }
    public double RataSupravietuire { get; set; }

    public EntitateEcosistem(string nume, int energie, int pozitieX, int pozitieY, double rataSupravietuire)
    {
        Nume = nume;
        Energie = energie;
        PozitieX = pozitieX;
        PozitieY = pozitieY;
        RataSupravietuire = rataSupravietuire;
    }

    public (int, int) Pozitie()
    {
        return (PozitieX, PozitieY);
    }

    public abstract void Actioneaza();
}

// ---------------------------
// Clasa Planta
// ---------------------------
class Planta : EntitateEcosistem
{
    public Planta(string nume, int energie, int pozitieX, int pozitieY, double rataSupravietuire)
        : base(nume, energie, pozitieX, pozitieY, rataSupravietuire) { }

    public override void Actioneaza()
    {
        // Creșterea plantei
        Energie += 5;
    }

    public Planta Reproduce()
    {
        if (Energie > 20)
        {
            Energie -= 10;
            return new Planta($"{Nume}_Copil", 10, PozitieX + new Random().Next(-1, 2), PozitieY + new Random().Next(-1, 2), RataSupravietuire);
        }
        return null;
    }
}

// ---------------------------
// Clasa abstractă Animal
// ---------------------------
abstract class Animal : EntitateEcosistem
{
    public int Viteza { get; set; }
    public string TipHrana { get; set; }

    public Animal(string nume, int energie, int pozitieX, int pozitieY, double rataSupravietuire, int viteza, string tipHrana)
        : base(nume, energie, pozitieX, pozitieY, rataSupravietuire)
    {
        Viteza = viteza;
        TipHrana = tipHrana;
    }

    public override void Actioneaza()
    {
        Deplaseaza();
        Energie -= 1;
    }

    public void Deplaseaza()
    {
        Random rand = new Random();
        PozitieX += rand.Next(-Viteza, Viteza + 1);
        PozitieY += rand.Next(-Viteza, Viteza + 1);
    }

    public void Mananca(EntitateEcosistem prada)
    {
        if (prada != null)
        {
            Energie += prada.Energie;
            prada.Energie = 0; // Prada este eliminată
        }
    }
}

// ---------------------------
// Clasele Erbivor, Carnivor, Omnivor
// ---------------------------
class Erbivor : Animal
{
    public Erbivor(string nume, int energie, int pozitieX, int pozitieY, double rataSupravietuire, int viteza)
        : base(nume, energie, pozitieX, pozitieY, rataSupravietuire, viteza, "plante") { }
}

class Carnivor : Animal
{
    public Carnivor(string nume, int energie, int pozitieX, int pozitieY, double rataSupravietuire, int viteza)
        : base(nume, energie, pozitieX, pozitieY, rataSupravietuire, viteza, "animale") { }
}

class Omnivor : Animal
{
    public Omnivor(string nume, int energie, int pozitieX, int pozitieY, double rataSupravietuire, int viteza)
        : base(nume, energie, pozitieX, pozitieY, rataSupravietuire, viteza, "mixt") { }
}

// ---------------------------
// Clasa Ecosistem
// ---------------------------
class Ec
